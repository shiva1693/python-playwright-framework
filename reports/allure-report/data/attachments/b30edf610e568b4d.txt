[35mDEBUG   [0m asyncio:selector_events.py:64 Using selector: KqueueSelector
[32mINFO    [0m tests.test_scenario_5_model_export:test_scenario_5_model_export.py:21 Run model training before export
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //div[contains(@class, "tab")]//div[@class="title" and contains(.,"Sign In")]
[32mINFO    [0m pages.base_page:base_page.py:17 Typing in element: //input[@type="email"] -> 'Nishank.aws02@outlook.com'
[32mINFO    [0m pages.base_page:base_page.py:17 Typing in element: //input[@type="password"] -> 'AWS@9394#'
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //button[contains(@class, "primary-btn") and contains(.,"Sign In")]
[32mINFO    [0m pages.projects_page:projects_page.py:21 Navigating to Projects tab
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: a[href="/projects"] > div.name.animate-slide
[32mINFO    [0m pages.projects_page:projects_page.py:26 Creating project: auto_project_20250730-112159-f
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: button#Quick-Action.primary-btn.light.quick-action
[32mINFO    [0m pages.base_page:base_page.py:17 Typing in element: input[placeholder^="Project"][type="text"] -> 'auto_project_20250730-112159-f'
[32mINFO    [0m pages.base_page:base_page.py:17 Typing in element: label:has(div:has-text("Description")) input[type="text"] -> 'This is a test project description.'
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: button.primary-btn.light:has-text("Create") >> nth=1
[32mINFO    [0m pages.projects_page:projects_page.py:37 Project is created : auto_project_20250730-112159-f
[32mINFO    [0m pages.base_page:base_page.py:34 Element text=auto_project_20250730-112159-f visibility: True
[32mINFO    [0m pages.training_page:training_page.py:37 Navigating to Model tab
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: li#Models a[href="/models"]
[32mINFO    [0m pages.training_page:training_page.py:41 Clicking on Train Model button
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //button[@id='Quick-Action' and .//div[contains(text(),'Train Model')]]
[32mINFO    [0m pages.training_page:training_page.py:45 Selecting dataset: coco8
[32mINFO    [0m pages.base_page:base_page.py:17 Typing in element: (//input[@type='text' and @placeholder='Search' and contains(@class, 'search')])[2] -> 'coco8'
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //p[text()='COCO8']//ancestor::div[@class='content-wrapper']
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //div[text()=' Continue']//ancestor::button[@class='primary-btn light']
[32mINFO    [0m pages.training_page:training_page.py:53 Selecting project from dropdown: auto_project_20250730-112159-f
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //div[text()='Project']//ancestor::label//child::div[@class='select']
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //li[normalize-space()='auto_project_20250730-112159-f']
[32mINFO    [0m pages.base_page:base_page.py:17 Typing in element: //div[text()='Model name']//following-sibling::input -> 'Test Model 20250730_112159'
[32mINFO    [0m pages.training_page:training_page.py:61 Setting Model Configuratuions
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: (//p[text()='YOLO11n'])[2]
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //p[normalize-space(text())='Advanced Model Configuration']
[32mINFO    [0m pages.base_page:base_page.py:49 Attempting to clear and fill input: //p[normalize-space(.)='Epochs']/following::input[@type='number'][1] with value: 5
[32mINFO    [0m pages.base_page:base_page.py:56 Successfully filled input: //p[normalize-space(.)='Epochs']/following::input[@type='number'][1] with value: 5 and pressed Enter
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //p[normalize-space(.)='Image size']/following::input[@type='number'][1]
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //div[text()=' Continue']//ancestor::button[@class='primary-btn light']
[32mINFO    [0m pages.training_page:training_page.py:72 Training your model
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //p[normalize-space(.)='Bring your own agent']
[32mINFO    [0m pages.training_page:training_page.py:77 Content copied from Step 2.
[32mINFO    [0m pages.training_page:training_page.py:80 Verifying if connection is established (i.e., 'Connected' message appears)
[32mINFO    [0m pages.training_page:training_page.py:85 'Connected' text is visible â€“ connection established successfully.
[32mINFO    [0m pages.training_page:training_page.py:90 Clicking on the 'Done' button to finish the training step.
[32mINFO    [0m pages.training_page:training_page.py:93 Clicking on the 'Done' button
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //button[.//div[normalize-space(text())='Done']]
[32mINFO    [0m pages.training_page:training_page.py:99 Verifying if training has started
[32mINFO    [0m pages.base_page:base_page.py:34 Element //p[normalize-space(.)='Train'] visibility: True
[32mINFO    [0m tests.test_scenario_5_model_export:test_scenario_5_model_export.py:60 Step 3 Navigate to Deploy tab
[32mINFO    [0m pages.models_page:models_page.py:98 Clicking on the Deploy tab
[32mINFO    [0m pages.base_page:base_page.py:12 Clicking element: //p[normalize-space(.)='Deploy']
[32mINFO    [0m pages.models_page:models_page.py:102 Deploy tab clicked successfully.
[32mINFO    [0m tests.test_scenario_5_model_export:test_scenario_5_model_export.py:63 Step 4: Scroll dowmn to the export section
[32mINFO    [0m pages.models_page:models_page.py:105 Scrolling to the export options section
[32mINFO    [0m pages.base_page:base_page.py:41 Scrolled to element: //h2[contains(@class, 'card-title') and normalize-space(text())='Export']
[32mINFO    [0m pages.models_page:models_page.py:107 Scrolled to the export options section
[32mINFO    [0m tests.test_scenario_5_model_export:test_scenario_5_model_export.py:66 Step 5: Export model in all supported formats
[32mINFO    [0m pages.models_page:models_page.py:133 Starting export for model format: ONNX
[32mINFO    [0m pages.models_page:models_page.py:143 Clicking export button for: ONNX
[32mINFO    [0m pages.models_page:models_page.py:147 Waiting for Download button for: ONNX
[32mINFO    [0m utils.helpers:helpers.py:36 Capturing screenshot: screenshots/models_page_test_model_export_in_all_formats[chromium]_1753870967.png