{"uid":"b4d8e68eb0e5e672","name":"test_upload_dataset[chromium]","fullName":"tests.test_scenario_1_upload_dataset#test_upload_dataset","historyId":"3f9d2821efaaa97f1cc2e36c605457b1","time":{"start":1753817536794,"stop":1753817543459,"duration":6665},"status":"failed","statusMessage":"AssertionError: Dataset upload failed","statusTrace":"page = <Page url='https://hub.ultralytics.com/datasets'>\n\n    @pytest.mark.order(1)\n    @pytest.mark.smoke\n    def test_upload_dataset(page):\n        loginPage = LoginPage(page)\n        datasetsPage = DatasetsPage(page)\n    \n        loginPage.navigate_to_login()\n        loginPage.do_login(USERNAME, PASSWORD)\n        page.wait_for_url(f\"{BASE_URL}/home\", timeout=10000)\n        assert page.url == f\"{BASE_URL}/home\", \"Login failed, URL mismatch after login.\"\n    \n        datasetsPage.navigate_to_datasets_tab()\n        datasetsPage.upload_dataset(\"test_data/coco8.zip\")\n>       datasetsPage.validate_success_upload()\n\ntests/test_scenario_1_upload_dataset.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.datasets_page.DatasetsPage object at 0x1029d6510>\n\n    def validate_success_upload(self):\n        self.page.wait_for_selector(self.UPLOADED_DATASET_LABEL, timeout=10000, state=\"visible\")\n>       assert self.page.locator(self.UPLOADED_DATASET_LABEL, has_text=self.fName).is_visible(), \"Dataset upload failed\"\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError: Dataset upload failed\n\npages/datasets_page.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1753817534592,"stop":1753817534592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1753817534592,"stop":1753817534592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1753817534592,"stop":1753817534983,"duration":391},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1753817534592,"stop":1753817534592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type_launch_args","time":{"start":1753817534592,"stop":1753817534592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1753817534592,"stop":1753817534592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type","time":{"start":1753817534983,"stop":1753817534983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1753817534983,"stop":1753817536197,"duration":1214},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connect_options","time":{"start":1753817534983,"stop":1753817534983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"launch_browser","time":{"start":1753817534983,"stop":1753817534983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1753817536197,"stop":1753817536792,"duration":595},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Dataset upload failed","statusTrace":"page = <Page url='https://hub.ultralytics.com/datasets'>\n\n    @pytest.mark.order(1)\n    @pytest.mark.smoke\n    def test_upload_dataset(page):\n        loginPage = LoginPage(page)\n        datasetsPage = DatasetsPage(page)\n    \n        loginPage.navigate_to_login()\n        loginPage.do_login(USERNAME, PASSWORD)\n        page.wait_for_url(f\"{BASE_URL}/home\", timeout=10000)\n        assert page.url == f\"{BASE_URL}/home\", \"Login failed, URL mismatch after login.\"\n    \n        datasetsPage.navigate_to_datasets_tab()\n        datasetsPage.upload_dataset(\"test_data/coco8.zip\")\n>       datasetsPage.validate_success_upload()\n\ntests/test_scenario_1_upload_dataset.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.datasets_page.DatasetsPage object at 0x1029d6510>\n\n    def validate_success_upload(self):\n        self.page.wait_for_selector(self.UPLOADED_DATASET_LABEL, timeout=10000, state=\"visible\")\n>       assert self.page.locator(self.UPLOADED_DATASET_LABEL, has_text=self.fName).is_visible(), \"Dataset upload failed\"\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError: Dataset upload failed\n\npages/datasets_page.py:48: AssertionError","steps":[],"attachments":[{"uid":"90e395151c05fd32","name":"log","source":"90e395151c05fd32.txt","type":"text/plain","size":1317},{"uid":"bd1cecc4953307f0","name":"stdout","source":"bd1cecc4953307f0.txt","type":"text/plain","size":50}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"page::0","time":{"start":1753817543488,"stop":1753817543649,"duration":161},"status":"passed","steps":[],"attachments":[{"uid":"22e76f8016d1b447","name":"models_page_test_upload_dataset[chromium]","source":"22e76f8016d1b447.png","type":"image/png","size":317309},{"uid":"3f4cd8f9cf5604eb","name":"test_upload_dataset[chromium]_video","source":"3f4cd8f9cf5604eb.mp4","type":"video/mp4","size":0}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"browser::0","time":{"start":1753817543649,"stop":1753817543771,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1753817543777,"stop":1753817543791,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_scenario_1_upload_dataset"},{"name":"host","value":"Aishwaryas-MacBook-Air.local"},{"name":"thread","value":"77465-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_scenario_1_upload_dataset"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke"]},"source":"b4d8e68eb0e5e672.json","parameterValues":["'chromium'"]}